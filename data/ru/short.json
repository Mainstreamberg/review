[
    {
        "id": 37,
        "name": "Designing Controllers",
        "items": [
            {
                "id": 1,
                "name": "#AvoidHelperMethodsInController",
                "description": "Не размещайте вспомогательные методы в контроллере, только action."
            }
        ]
    },
    {
        "id": 38,
        "name": "Doctrine Practices",
        "items": [
            {
                "id": 1,
                "name": "#AvoidNativeQueriesDoctrine",
                "description": "Отказываемся от нативных SQL-запросов в пользу абстракций Doctrine"
            }
        ]
    },
    {
        "id": 39,
        "name": "JavaScript",
        "items": [
            {
                "id": 1,
                "name": "#AvoidComplexSelectors",
                "description": "Избегаем комплексные селекторы"
            }
        ]
    },
    {
        "id": 40,
        "name": "CodeClarity",
        "items": [
            {
                "id": 1,
                "name": "#NamingConventions",
                "description": "Соглашения об именовании"
            },
            {
                "id": 2,
                "name": "#NoCodeTypos",
                "description": "Проблемы опечаток в коде"
            },
            {
                "id": 3,
                "name": "#UnusedCode",
                "description": "Неиспользуемый код"
            }
        ]
    },
    {
        "id": 41,
        "name": "CommitGuidelines",
        "items": [
            {
                "id": 1,
                "name": "#CommitNaming",
                "description": "Именование коммита"
            },
            {
                "id": 2,
                "name": "#TypoInCommitMessage",
                "description": "Опечатка в заголовке коммита"
            },
            {
                "id": 3,
                "name": "#CommitAndTaskCodeConsistency",
                "description": "Согласованность кода задачи и коммита"
            }
        ]
    },
    {
        "id": 42,
        "name": "Commenting",
        "items": [
            {
                "id": 1,
                "name": "#CommentedCodeExplanation",
                "description": "Хочешь оставить закоментированный код. Пиши пояснительный комментарий"
            },
            {
                "id": 2,
                "name": "#ExplainDeprecation",
                "description": "Поясняем причины применения аннотации @deprecated"
            },
            {
                "id": 3,
                "name": "#CommentEmptyFile",
                "description": "Необходим поясняющий комментарий, объясняющий назначение пустого файла."
            }
        ]
    },
    {
        "id": 43,
        "name": "Debugging",
        "items": [
            {
                "id": 1,
                "name": "#NoDebugOutputInCode",
                "description": "Не оставляем вывод сообщений дебага в коде"
            }
        ]
    },
    {
        "id": 44,
        "name": "Coding Style",
        "items": [
            {
                "id": 1,
                "name": "#MethodCallFormatting",
                "description": "Форматирование вызовов методов"
            }
        ]
    },
    {
        "id": 45,
        "name": "Moodle Practices",
        "items": [
            {
                "id": 1,
                "name": "#UseRepositoryAndQB",
                "description": "Используем репозитории и построитель запросов"
            },
            {
                "id": 2,
                "name": "#LibraryWrapper",
                "description": "Используем обертки для библиотек и классов, подключаемых через require, include, для упрощения их использования и инжекции зависимостей"
            }
        ]
    },
    {
        "id": 46,
        "name": "Разделение логики",
        "items": [
            {
                "id": 1,
                "name": "#EntityResponsibility",
                "description": "Нарушение ответственности сущности"
            }
        ]
    },
    {
        "id": 47,
        "name": "Проектирование Классов",
        "items": [
            {
                "id": 1,
                "name": "#UseDependencyInjection",
                "description": "Используем Dependency Injection для разрешения зависимостей"
            },
            {
                "id": 2,
                "name": "#ClassNaming",
                "description": "Именование классов"
            },
            {
                "id": 3,
                "name": "#AvoidDynamicMethods",
                "description": "Избегаем динамических вызовов методов"
            }
        ]
    },
    {
        "id": 48,
        "name": "Проектирование Репозиториев",
        "items": [
            {
                "id": 1,
                "name": "#CleanQueryBuilder",
                "description": "Чистый построитель запросов"
            },
            {
                "id": 2,
                "name": "#AvoidDefaultLogicInQueryBuilder",
                "description": "Избегайте логики по умолчанию в QueryBuilder"
            },
            {
                "id": 3,
                "name": "#IndependentQueryFilters",
                "description": "Независимые фильтра построителя запросов(QueryBuilder)"
            },
            {
                "id": 4,
                "name": "#BuildAndReuseQueries",
                "description": "Построение и переиспользование запросов"
            }
        ]
    },
    {
        "id": 49,
        "name": "Проектирование Сущностей",
        "items": [
            {
                "id": 1,
                "name": "#DirectEntityPropertyAccess",
                "description": "Используем прямой доступ к свойствам сущности"
            },
            {
                "id": 2,
                "name": "#EntityConstructorFlex",
                "description": "Гибкость создания сущности"
            },
            {
                "id": 3,
                "name": "#TableAndEntityNaming",
                "description": "Именование таблиц и сущностей"
            }
        ]
    },
    {
        "id": 50,
        "name": "Designing Methods",
        "items": [
            {
                "id": 1,
                "name": "#ReturnTypeConfusion",
                "description": "Возвращаемое значение имеет несколько разных типов, это похоже на запутывание логики"
            },
            {
                "id": 2,
                "name": "#ExceptionsNotFlags",
                "description": "Предпочитаем исключения булевой логике"
            },
            {
                "id": 3,
                "name": "#StrongTypingInMethods",
                "description": "Придерживаемся строгой типизации методов"
            },
            {
                "id": 4,
                "name": "#ParameterOrderOptimization",
                "description": "Разместите необязательные параметры в конце для улучшения гибкости и читаемости метода"
            },
            {
                "id": 5,
                "name": "#ReplaceArgumentsWithDTO",
                "description": "Для большого числа аргументов, можно их заменить на ДТО"
            },
            {
                "id": 6,
                "name": "#OptimizeMethodArguments",
                "description": "Оптимизация аргументов метода"
            },
            {
                "id": 7,
                "name": "#MethodNaming",
                "description": "Именование методов"
            },
            {
                "id": 8,
                "name": "#AvoidFlagsAsArguments",
                "description": "Избегайте использования флагов в качестве аргументов для упрощения логики и улучшения читаемости кода"
            }
        ]
    },
    {
        "id": 51,
        "name": "Плохие практики",
        "items": [
            {
                "id": 1,
                "name": "#AtSymbolErrorSuppression",
                "description": "Не давим ошибки собакой"
            },
            {
                "id": 2,
                "name": "#AvoidDirectGlobalAccess",
                "description": "Избегайте прямого доступа к глобальным массивам"
            },
            {
                "id": 3,
                "name": "#AvoidStaticMethods",
                "description": "Избегайте статических методов"
            },
            {
                "id": 4,
                "name": "#AvoidDefaultValuesInDTO",
                "description": "Избегайте значений по умолчанию в ДТО"
            },
            {
                "id": 5,
                "name": "#InefficientObjectCreationInLoop",
                "description": "Создание объектов в цикле приводит к неэффективности"
            }
        ]
    },
    {
        "id": 52,
        "name": "PR Workflow",
        "items": [
            {
                "id": 1,
                "name": "#MandatoryPushFixCommits",
                "description": "Обязательно заливаем промежуточные коммиты в удаленный репозиторий."
            },
            {
                "id": 2,
                "name": "#ScheduledRefactor",
                "description": "Запланирован рефакторинг."
            },
            {
                "id": 3,
                "name": "#RefactorTaskCreated",
                "description": "Задача на рефакторинг создана"
            },
            {
                "id": 4,
                "name": "#SmallPRBetter",
                "description": "Маленькие ПР — эффективнее"
            },
            {
                "id": 5,
                "name": "#SeparateFormattingCommit",
                "description": "Переформатирование файлов делаем отдельным коммитом"
            },
            {
                "id": 6,
                "name": "#ChangesThatDontMatter",
                "description": "Уменьшаем бесполезные изменения в коде"
            }
        ]
    },
    {
        "id": 53,
        "name": "Практики для Yii",
        "items": [
            {
                "id": 1,
                "name": "#UseFunctionForDynamicValueInYii",
                "description": "Используем функции для указания динамического value в виджетах фреймворка и т.п."
            },
            {
                "id": 2,
                "name": "#CustomFrameworkWrapper",
                "description": "Используем обертку вокруг стандартного класса фреймворка, добавляющую кастомизированную функциональность для удобства и гибкости"
            }
        ]
    },
    {
        "id": 54,
        "name": "Best Practices",
        "items": [
            {
                "id": 1,
                "name": "#UseClassConstantForClassName",
                "description": "Используем константу класса вместо строки"
            },
            {
                "id": 2,
                "name": "#StrictComparisonOnly",
                "description": "Используем строгое сравнение для предотвращения ошибок, связанных с автоматическим приведением типов"
            }
        ]
    }
]